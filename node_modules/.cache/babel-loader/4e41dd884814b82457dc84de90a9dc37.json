{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertCSVToArrayOfObjects = void 0;\n\nvar _convertStringToNumber = require(\"convert-string-to-number\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar convertCSVToArrayOfObjects = function convertCSVToArrayOfObjects(data, _ref) {\n  var header = _ref.header,\n      separator = _ref.separator;\n  var csv = data;\n  var rows = csv.split(/(?!\\B\"[^\"]*)\\n(?![^\"]*\"\\B)/g);\n  var array = [];\n  var headerRow;\n  var headerObj;\n  var content = [];\n  rows.forEach(function (row, idx) {\n    if (idx === 0) {\n      headerRow = row.split(separator);\n\n      if (header) {\n        array.push(headerRow);\n      }\n\n      headerRow.forEach(function (headerItem) {\n        headerObj = Object.assign({}, headerObj, _defineProperty({}, headerItem, undefined));\n      });\n    } else if (rows.length - 1 !== idx) {\n      var values = row.split(separator);\n      values.forEach(function (value, i) {\n        var convertedToNumber = (0, _convertStringToNumber.convertStringToNumber)(value);\n        var thisValue = Number.isNaN(convertedToNumber) ? value : convertedToNumber;\n        headerObj = Object.assign({}, headerObj, _defineProperty({}, headerRow[i], thisValue));\n      });\n      content.push(headerObj);\n    }\n  });\n  array.push.apply(array, content);\n  return array;\n};\n\nexports.convertCSVToArrayOfObjects = convertCSVToArrayOfObjects;","map":{"version":3,"sources":["/Users/desmondmolloy/Desktop/Codecademy_bench/node_modules/convert-csv-to-array/lib/modules/convert-csv-to-array-of-objects.js"],"names":["Object","defineProperty","exports","value","convertCSVToArrayOfObjects","_convertStringToNumber","require","_defineProperty","obj","key","enumerable","configurable","writable","data","_ref","header","separator","csv","rows","split","array","headerRow","headerObj","content","forEach","row","idx","push","headerItem","assign","undefined","length","values","i","convertedToNumber","convertStringToNumber","thisValue","Number","isNaN","apply"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,0BAAR,GAAqC,KAAK,CAA1C;;AAEA,IAAIC,sBAAsB,GAAGC,OAAO,CAAC,0BAAD,CAApC;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCN,KAAnC,EAA0C;AAAE,MAAIM,GAAG,IAAID,GAAX,EAAgB;AAAER,IAAAA,MAAM,CAACC,cAAP,CAAsBO,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEN,MAAAA,KAAK,EAAEA,KAAT;AAAgBO,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEJ,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWN,KAAX;AAAmB;;AAAC,SAAOK,GAAP;AAAa;;AAEjN,IAAIJ,0BAA0B,GAAG,SAASA,0BAAT,CAAoCS,IAApC,EAA0CC,IAA1C,EAAgD;AAC/E,MAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;AAAA,MACIC,SAAS,GAAGF,IAAI,CAACE,SADrB;AAEA,MAAIC,GAAG,GAAGJ,IAAV;AACA,MAAIK,IAAI,GAAGD,GAAG,CAACE,KAAJ,CAAU,6BAAV,CAAX;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,SAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,OAAO,GAAG,EAAd;AACAL,EAAAA,IAAI,CAACM,OAAL,CAAa,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC/B,QAAIA,GAAG,KAAK,CAAZ,EAAe;AACbL,MAAAA,SAAS,GAAGI,GAAG,CAACN,KAAJ,CAAUH,SAAV,CAAZ;;AAEA,UAAID,MAAJ,EAAY;AACVK,QAAAA,KAAK,CAACO,IAAN,CAAWN,SAAX;AACD;;AAEDA,MAAAA,SAAS,CAACG,OAAV,CAAkB,UAAUI,UAAV,EAAsB;AACtCN,QAAAA,SAAS,GAAGtB,MAAM,CAAC6B,MAAP,CAAc,EAAd,EAAkBP,SAAlB,EAA6Bf,eAAe,CAAC,EAAD,EAAKqB,UAAL,EAAiBE,SAAjB,CAA5C,CAAZ;AACD,OAFD;AAGD,KAVD,MAUO,IAAIZ,IAAI,CAACa,MAAL,GAAc,CAAd,KAAoBL,GAAxB,EAA6B;AAClC,UAAIM,MAAM,GAAGP,GAAG,CAACN,KAAJ,CAAUH,SAAV,CAAb;AACAgB,MAAAA,MAAM,CAACR,OAAP,CAAe,UAAUrB,KAAV,EAAiB8B,CAAjB,EAAoB;AACjC,YAAIC,iBAAiB,GAAG,CAAC,GAAG7B,sBAAsB,CAAC8B,qBAA3B,EAAkDhC,KAAlD,CAAxB;AACA,YAAIiC,SAAS,GAAGC,MAAM,CAACC,KAAP,CAAaJ,iBAAb,IAAkC/B,KAAlC,GAA0C+B,iBAA1D;AACAZ,QAAAA,SAAS,GAAGtB,MAAM,CAAC6B,MAAP,CAAc,EAAd,EAAkBP,SAAlB,EAA6Bf,eAAe,CAAC,EAAD,EAAKc,SAAS,CAACY,CAAD,CAAd,EAAmBG,SAAnB,CAA5C,CAAZ;AACD,OAJD;AAKAb,MAAAA,OAAO,CAACI,IAAR,CAAaL,SAAb;AACD;AACF,GApBD;AAqBAF,EAAAA,KAAK,CAACO,IAAN,CAAWY,KAAX,CAAiBnB,KAAjB,EAAwBG,OAAxB;AACA,SAAOH,KAAP;AACD,CAhCD;;AAkCAlB,OAAO,CAACE,0BAAR,GAAqCA,0BAArC","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertCSVToArrayOfObjects = void 0;\n\nvar _convertStringToNumber = require(\"convert-string-to-number\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar convertCSVToArrayOfObjects = function convertCSVToArrayOfObjects(data, _ref) {\n  var header = _ref.header,\n      separator = _ref.separator;\n  var csv = data;\n  var rows = csv.split(/(?!\\B\"[^\"]*)\\n(?![^\"]*\"\\B)/g);\n  var array = [];\n  var headerRow;\n  var headerObj;\n  var content = [];\n  rows.forEach(function (row, idx) {\n    if (idx === 0) {\n      headerRow = row.split(separator);\n\n      if (header) {\n        array.push(headerRow);\n      }\n\n      headerRow.forEach(function (headerItem) {\n        headerObj = Object.assign({}, headerObj, _defineProperty({}, headerItem, undefined));\n      });\n    } else if (rows.length - 1 !== idx) {\n      var values = row.split(separator);\n      values.forEach(function (value, i) {\n        var convertedToNumber = (0, _convertStringToNumber.convertStringToNumber)(value);\n        var thisValue = Number.isNaN(convertedToNumber) ? value : convertedToNumber;\n        headerObj = Object.assign({}, headerObj, _defineProperty({}, headerRow[i], thisValue));\n      });\n      content.push(headerObj);\n    }\n  });\n  array.push.apply(array, content);\n  return array;\n};\n\nexports.convertCSVToArrayOfObjects = convertCSVToArrayOfObjects;"]},"metadata":{},"sourceType":"script"}