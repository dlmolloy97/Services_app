{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/desmondmolloy/Desktop/Codecademy_bench/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport \"d3-time-format\";\nconst parseTime = d3.timeParse(\"%d-%b-%y\");\n\nconst createGraph = async () => {\n  const margin = {\n    top: 20,\n    right: 20,\n    bottom: 50,\n    left: 70\n  },\n        width = 960 - margin.left - margin.right,\n        height = 500 - margin.top - margin.bottom;\n  const x = d3.scaleTime().range([0, width]);\n  const y = d3.scaleLinear().range([height, 0]);\n  const valueLine = d3.line().x(d => {\n    return x(d.date);\n  }).y(d => {\n    return y(d.close);\n  });\n  const svg = d3.select(\"body\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n  let data = await d3.csv(require(\"./data/test.csv\"));\n  data.forEach(d => {\n    d.date = parseTime(d.date);\n    d.close = +d.close;\n  });\n  data = data.sort((a, b) => +a.date - +b.date);\n  x.domain(d3.extent(data, d => {\n    return d.date;\n  }));\n  y.domain([0, d3.max(data, d => {\n    return d.close;\n  })]);\n  svg.append(\"path\").data([data]).attr(\"class\", \"line\").attr(\"d\", valueLine);\n  svg.append(\"g\").attr(\"transform\", `translate(0, ${height})`).call(d3.axisBottom(x));\n  svg.append(\"g\").call(d3.axisLeft(y));\n};\n\nexport default function App() {\n  _s();\n\n  useEffect(() => {\n    createGraph();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          .line {\n            fill: none;\n            stroke: steelblue;\n            stroke-width: 2px;\n          }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/desmondmolloy/Desktop/Codecademy_bench/src/App.js"],"names":["React","useEffect","d3","parseTime","timeParse","createGraph","margin","top","right","bottom","left","width","height","x","scaleTime","range","y","scaleLinear","valueLine","line","d","date","close","svg","select","append","attr","data","csv","require","forEach","sort","a","b","domain","extent","max","call","axisBottom","axisLeft","App"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport \"d3-time-format\";\nconst parseTime = d3.timeParse(\"%d-%b-%y\");\n\nconst createGraph = async () => {\n  const margin = { top: 20, right: 20, bottom: 50, left: 70 },\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n  const x = d3.scaleTime().range([0, width]);\n  const y = d3.scaleLinear().range([height, 0]);\n\n  const valueLine = d3.line()\n    .x((d) => { return x(d.date); })\n    .y((d) => { return y(d.close); });\n\n  const svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n  let data = await d3.csv(require(\"./data/test.csv\"))\n\n  data.forEach((d) => {\n    d.date = parseTime(d.date);\n    d.close = +d.close;\n  });\n\n  data = data.sort((a, b) => +a.date - +b.date)\n\n  x.domain(d3.extent(data, (d) => { return d.date; }));\n  y.domain([0, d3.max(data, (d) => { return d.close; })]);\n\n  svg.append(\"path\")\n    .data([data])\n    .attr(\"class\", \"line\")\n    .attr(\"d\", valueLine);\n\n  svg.append(\"g\")\n    .attr(\"transform\", `translate(0, ${height})`)\n    .call(d3.axisBottom(x));\n\n  svg.append(\"g\")\n    .call(d3.axisLeft(y));\n}\n\nexport default function App() {\n  useEffect(() => {\n    createGraph();\n  }, []);\n\n  return (\n    <div>\n      <style>{\n        `\n          .line {\n            fill: none;\n            stroke: steelblue;\n            stroke-width: 2px;\n          }\n      `}\n      </style>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}